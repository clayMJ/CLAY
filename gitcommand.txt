$sudo apk-get install git
安装git 
$mkdir git 
建立git目录
$pwd
显示该目录
$git 
进入git
$git config --global user.name "Your name"
 git config --global user.email "Your email"
自报家门
$git init
把目录变成变成git管理的仓库
$ls -ah
git目录隐藏，用ls -ah查看
$git add <file> 
给仓库添加文件
$git commit -m "执行操作"
将文件提交到仓库
$git status
查看仓库状态
$git diff
查看仓库修改内容
$git log 
查看git提交历史记录
$git log --pretty=oneline
简要查看git历史记录
$git reset --hard HEAD^   
                  HEAD^^
				  HEAD~n
				  <版本号>
往上多少个版本，即撤销多少次操作，^一次^^两次~n为n次,或者输出版本号退回该版本
$git reflog
查看命令历史，查看版本号
$git checkout -- <file>
把工作区的file文件撤销修改
$git reset HEAD <file>
回退版本（见28行）也可撤销修改
$git rm <file>
$git commit -m "remove <file>"
从库里删除文件
$git checkout --<file>
如rm <file>,用此命令撤销
$ssh -keygen -t rsa -C "youremail@example.com"
创建ssh key，并将主目录中.ssh里id_rsa.pub公匙黏贴在github.com/settings/ssh中key部分
注:黏贴id_rsa.pub用$cat id_rsa.pub用ctrl c+v
$get remote add origin git@github.com:user/repo-name.git
跟本地git关联
$git push -u origin master
推送本地库到远程（-u分支和远程master关联起来，以后可省略）
$git clone git@github.com:path/rep-name.git
从github克隆一个本地库
$git branch
查看当前分支，分支前有*
$git checkout -b <name>
创建分支并指向该分支,即以下两条命令$git branch <name> $git checkout <name>
$git merge <name>
将master指针指向<name>所指，即分支变成主线
$git branch -d <name>
删<name>分支
$git log --graph     ／／注可加--pretty=oneline --abbrev-commit简略输出
看分支合并图
$git checkout <branchname>
切换分支
$git branch <name>
新建分支
$git merge --no-ff -m "what you have done" dev
禁用fast forward模式归并(多产生一个commit防止文件丢失)
$git stash
将工作现场储存起来
$git stash list
查看储存到工作现场
$git stash apply
恢复
$git stash drop
stash内容删除
$git stash pop
删除stash
$git remote // (-v)显示更详细信息
查看远程库
$git pull
把最新的提交从origin/dev抓取下来
$多人协作模式
//首先，可以试图用git push origin branch-name推送自己的修改；
如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并；
如果合并有冲突，则解决冲突，并在本地提交；
没有冲突或者解决掉冲突后，再用git push origin branch-name推送就能成功！
如果git pull提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建，用命令git branch --set-upstream branch-name origin/branch-name。
$git tag <name> <commit id>
默认为HEAD，也可指定一个commit id;
$git tag -a <tagname> -m "blablabla"
用指定标签信息
$git tag -s <tagname> -m "blablabla"
用pgp签名标签
$git tag 
查看所有标签
$git tag -d <tagname>
删除标签
$git push origin <tagname>
推送某标签到origin
$git push origin --tags
推送所有标签
$git push origin :refs/tags/<tagname>
删除远程标签
$
$
$
